name: Publish docker image

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy build to AWS
        default: false
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  DB_URI: ${{ secrets.DATABASE_CONNECTION_STRING }}

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ vars.TEST_NODE_ENV }}
      TEST_TIMEOUT: ${{ vars.TEST_TIMEOUT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Testing the application
        run: |
          npm install
          npm test

  publish:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      digest: ${{ steps.docker-build.outputs.digest }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: docker-build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    if: inputs.deploy
    permissions:
      id-token: write

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::904819361155:role/GithubActionRole
          aws-region: ap-south-1

      - name: Send update deployment event to AWS
        run: aws sqs send-message --queue-url shadow-events.fifo --message-body '{"name":"update-deployment","image":{"tag":"${{ needs.publish.outputs.digest }}"}}' --message-group-id shadow-deploy
